#! /bin/bash
# Configures build environment for appropriate target architecture

# Definitions
SOURCE_DIR=$(dirname $0)
WAV_RTOS_DIR=${WAV_RTOS_DIR:-${SOURCE_DIR}}
TOOLCHAIN_DIR="${WAV_RTOS_DIR}/toolchain"
RISCV_TOOLCHAIN="${TOOLCHAIN_DIR}/riscv.toolchain"
BUILD_DIR="build"

# Variables
CONFIG_TARGET_CPU=""
CONFIG_TARGET_ARCH=""
CONFIG_TARGET_BOARD=${CONFIG_TARGET_BOARD:-""}
BUILD_TYPE=""

# Common build prep function
init_build_common() {
  mkdir -p ${BUILD_DIR}
}

init_riscv64() {
  cmake -S ${SOURCE_DIR}  \
        -B ${BUILD_DIR} \
        -DCMAKE_TOOLCHAIN_FILE=../${RISCV_TOOLCHAIN} \
        -DCONFIG_SRC_ARCH="riscv" \
        -DCONFIG_TARGET_ARCH="riscv64" \
        -DCONFIG_TARGET_BOARD=${CONFIG_TARGET_BOARD} \
        -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \
        ${PARAMS[@]}
}

init_riscv32() {
  cmake -S ${SOURCE_DIR} \
        -B ${BUILD_DIR} \
        -DCMAKE_TOOLCHAIN_FILE=../${RISCV_TOOLCHAIN} \
        -DCONFIG_SRC_ARCH="riscv" \
        -DCONFIG_TARGET_ARCH="riscv32" \
        -DCONFIG_TARGET_BOARD=${CONFIG_TARGET_BOARD} \
        -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \
        ${PARAMS[@]}
}

print_help() {
echo "Usage: configure [OPTIONS]\n"
echo "This program configures CMAKE for given architecture\n"
echo "Options:"
echo "--board <wavious-mcu | wavious-wh440>"
echo "-t, --build_type <Debug | Release>"
}

PARAMS=""
while [ $# -gt 0 ]; do
  case "$1" in
    --board)
      CONFIG_TARGET_BOARD=$2
      shift 2
      ;;
    -t | --build_type)
      BUILD_TYPE=$2
      shift 2
      ;;
    -h | --help)
      print_help
      exit
      ;;
    --) # end argument parsing
      shift
      break
      ;;
    *) # preserve positional arguments
      PARAMS="$PARAMS $1"
      shift
      ;;
  esac
done
# set positional arguments in their proper place
eval set -- "$PARAMS"

case "$CONFIG_TARGET_BOARD" in
    wavious-mcu)
      init_build_common
      init_riscv32
      ;;
    wavious-wh440)
      init_build_common
      init_riscv64
      ;;
    *)
      echo "Bad board specified. Exiting..."
      exit
      ;;
esac
